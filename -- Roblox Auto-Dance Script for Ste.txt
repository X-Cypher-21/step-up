-- Roblox Auto-Dance Script for Step-Up (Auto-Update Version)
-- Automatically dances to the BPM of the song
-- Fetches latest script version from GitHub

local HttpService = game:GetService("HttpService")
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UIS = game:GetService("UserInputService")
local StarterGui = game:GetService("StarterGui")

local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()

-- Replace this with your GitHub Raw URL
local GITHUB_RAW_URL = "https://raw.githubusercontent.com/YOUR-USERNAME/YOUR-REPO-NAME/main/step_up_auto_dance.lua"

local isDancing = true
local currentBPM = 120

-- Function to fetch latest script from GitHub
local function fetchLatestScript()
    local response = HttpService:GetAsync(GITHUB_RAW_URL, true)
    loadstring(response)()
end

-- Function to toggle dance
local function toggleDance()
    isDancing = not isDancing
    if isDancing then
        print("[Step-Up Auto Dance]: Dancing resumed.")
        pcall(fetchLatestScript)
    else
        print("[Step-Up Auto Dance]: Dancing paused.")
    end
end

-- Function to randomly select a dance based on BPM
local function getDanceByBPM(bpm)
    if bpm < 100 then
        return "Slow Dance"
    elseif bpm < 140 then
        return "Medium Dance"
    else
        return "Fast Dance"
    end
end

-- Create GUI
local ScreenGui = Instance.new("ScreenGui")
local Frame = Instance.new("Frame")
local ToggleButton = Instance.new("TextButton")
local BPMLabel = Instance.new("TextLabel")

ScreenGui.Parent = game.CoreGui
Frame.Parent = ScreenGui
Frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
Frame.Size = UDim2.new(0, 200, 0, 120)
Frame.Position = UDim2.new(0, 20, 0, 100)

ToggleButton.Parent = Frame
ToggleButton.Text = "Stop Dancing"
ToggleButton.Size = UDim2.new(1, 0, 0.5, 0)
ToggleButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
ToggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)

BPMLabel.Parent = Frame
BPMLabel.Size = UDim2.new(1, 0, 0.5, 0)
BPMLabel.Position = UDim2.new(0, 0, 0.5, 0)
BPMLabel.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
BPMLabel.TextColor3 = Color3.fromRGB(255, 255, 255)

ToggleButton.MouseButton1Click:Connect(function()
    toggleDance()
    if isDancing then
        ToggleButton.Text = "Stop Dancing"
    else
        ToggleButton.Text = "Start Dancing"
    end
end)

-- Function to simulate BPM detection (for now)
local function updateBPM()
    while true do
        currentBPM = math.random(80, 180)
        BPMLabel.Text = "BPM: " .. currentBPM .. "\nDance: " .. getDanceByBPM(currentBPM)
        wait(5)
    end
end

-- Start BPM updater
spawn(updateBPM)

-- Detect when 'P' is pressed to toggle dancing
UIS.InputBegan:Connect(function(input)
    if input.KeyCode == Enum.KeyCode.P then
        toggleDance()
        if isDancing then
            ToggleButton.Text = "Stop Dancing"
        else
            ToggleButton.Text = "Start Dancing"
        end
    end
end)

-- Attempt to fetch the latest version
if isDancing then
    pcall(fetchLatestScript)
end

